{% set name = "kwant" %}
{% set version = "1.4.3" %}
{% set build = 1 %}

package:
  name: {{ name }}
  version: {{ version }}

source:
  fn: {{ name }}-{{ version }}.tar.gz
  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/kwant-{{ version }}.tar.gz
  sha256: 3219d2512fcee55fa225328360574897e9f6049cfbae921bda0640a3a79dbd9f
  patches:
    - skip_tests.patch  # [win]
    - skip_test_basis_ordering.patch
    - skip_test_kpm_kwant_op.patch  # [win]
    - init_mpi.patch  # [mpi != "nompi"]
    - sympy_compat.patch

# We set the build number of the `nompi` variant higher than
# the `mpi` variant, such that the `nompi` will be preferred.
{% if mpi == "nompi" %}
{% set build = build + 100 %}
{% endif %}

build:
  skip: true  # [py2k]
  number: {{ build }}
  # add build string so packages can depend on
  # mpi or nompi variants explicitly:
  # `pkg * mpi_mpich_*` for mpich
  # `pkg * mpi_*` for any mpi
  # `pkg * nompi_*` for no mpi
  {% if mpi != 'nompi' %}
  {% set mpi_prefix = "mpi_" + mpi %}
  {% else %}
  {% set mpi_prefix = "nompi" %}
  {% endif %}
  string: {{ mpi_prefix }}_py{{ py }}h{{ PKG_HASH }}_{{ build }}
  run_exports:
    - {{ name }} * {{ mpi_prefix }}_*  # [mpi != "nompi"]

requirements:
  build:
    - python                                 # [build_platform != target_platform]
    - cross-python_{{ target_platform }}     # [build_platform != target_platform]
    - cython                                 # [build_platform != target_platform]
    - numpy                                  # [build_platform != target_platform]
    - {{ compiler('fortran') }}
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
  host:
    - setuptools
    - libblas
    - libcblas
    - python
    - cython
    - mumps-seq  # [not win and mpi == "nompi"]
    - mumps-mpi  # [mpi != "nompi"]
    - {{ mpi }}   # [mpi != "nompi"]
    - mpi4py  # [mpi != "nompi"]
    - numpy
    - scipy
    - pytest
    - tinyarray
  run:
    - python
    - mumps-seq  # [not win and mpi == "nompi"]
    - mumps-mpi  # [mpi != "nompi"]
    - {{ mpi }}  # [mpi != "nompi"]
    - mpi4py  # [mpi != "nompi"]
    - {{ pin_compatible('numpy') }}
    - matplotlib-base
    - scipy
    - pytest
    - tinyarray
    - sympy
    - qsymm
    - vc 14  # [win and py>=35]

test:
  imports:
    - kwant
    - kwant.graph
    - kwant.graph.tests
    - kwant.linalg
    - kwant.linalg.tests
    - kwant.physics
    - kwant.physics.tests
    - kwant.solvers
    - kwant.solvers.tests
    - kwant.tests

about:
  home: http://kwant-project.org/
  license: BSD-2-Clause
  license_file: LICENSE.rst
  license_family: BSD
  summary: Package for numerical quantum transport calculations.
  description: |
    Kwant is a free (open source) Python package for numerical calculations on
    tight-binding models with a strong focus on quantum transport. It is designed to
    be flexible and easy to use. Thanks to the use of innovative algorithms, Kwant
    is often faster than other available codes, even those entirely written in the
    low level FORTRAN and C/C++ languages.
  doc_url: https://kwant-project.org/doc/1/
  dev_url: https://gitlab.kwant-project.org/kwant/kwant/

extra:
  recipe-maintainers:
    - basnijholt
    - jbweston
    - akhmerov
